{"ast":null,"code":"var _jsxFileName = \"D:\\\\Documentos\\\\TecMilenio\\\\Fullstack\\\\fase1y2\\\\frontend\\\\my-app\\\\src\\\\componentes\\\\HiloList.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HiloList = ({\n  hilos,\n  onSelectHilo,\n  onDeleteHilo\n}) => {\n  if (!hilos || hilos.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No hay hilos disponibles.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 5,\n      columnNumber: 12\n    }, this); // Manejo cuando no hay hilos\n  }\n  const eliminarHilo = async id => {\n    const confirm = window.confirm('¿Estás seguro de que quieres eliminar este hilo?');\n    if (!confirm) return;\n    const response = await fetch(`http://localhost:5000/hilo/${id}`, {\n      method: 'DELETE'\n    });\n    if (response.ok) {\n      // Llama a la función para eliminar el hilo de la lista localmente\n      onDeleteHilo(id);\n    } else {\n      console.error('Error al eliminar hilo');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Hilos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: hilos.map(hilo => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: hilo.titulo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => onSelectHilo(hilo),\n          children: \"Ver Hilo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => eliminarHilo(hilo.id),\n          children: \"Eliminar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 73\n        }, this)]\n      }, hilo.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_c = HiloList;\nexport default HiloList;\nvar _c;\n$RefreshReg$(_c, \"HiloList\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","HiloList","hilos","onSelectHilo","onDeleteHilo","length","children","fileName","_jsxFileName","lineNumber","columnNumber","eliminarHilo","id","confirm","window","response","fetch","method","ok","console","error","map","hilo","titulo","onClick","_c","$RefreshReg$"],"sources":["D:/Documentos/TecMilenio/Fullstack/fase1y2/frontend/my-app/src/componentes/HiloList.js"],"sourcesContent":["import React from 'react';\r\n\r\nconst HiloList = ({ hilos, onSelectHilo, onDeleteHilo }) => {\r\n  if (!hilos || hilos.length === 0) {\r\n    return <p>No hay hilos disponibles.</p>; // Manejo cuando no hay hilos\r\n  }\r\n  const eliminarHilo = async (id) => {\r\n    const confirm = window.confirm('¿Estás seguro de que quieres eliminar este hilo?');\r\n    if (!confirm) return;\r\n\r\n    const response = await fetch(`http://localhost:5000/hilo/${id}`, {\r\n      method: 'DELETE',\r\n    });\r\n\r\n    if (response.ok) {\r\n      // Llama a la función para eliminar el hilo de la lista localmente\r\n      onDeleteHilo(id);\r\n    } else {\r\n      console.error('Error al eliminar hilo');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Hilos</h2>\r\n      <ul>\r\n        {hilos.map((hilo) => (\r\n          <li key={hilo.id}>\r\n            <span>{hilo.titulo}</span>\r\n            <button onClick={() => onSelectHilo(hilo)}>Ver Hilo</button><button onClick={() => eliminarHilo(hilo.id)}>Eliminar</button>\r\n            \r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HiloList;\r\n\r\n\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,QAAQ,GAAGA,CAAC;EAAEC,KAAK;EAAEC,YAAY;EAAEC;AAAa,CAAC,KAAK;EAC1D,IAAI,CAACF,KAAK,IAAIA,KAAK,CAACG,MAAM,KAAK,CAAC,EAAE;IAChC,oBAAOL,OAAA;MAAAM,QAAA,EAAG;IAAyB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,CAAC,CAAC;EAC3C;EACA,MAAMC,YAAY,GAAG,MAAOC,EAAE,IAAK;IACjC,MAAMC,OAAO,GAAGC,MAAM,CAACD,OAAO,CAAC,kDAAkD,CAAC;IAClF,IAAI,CAACA,OAAO,EAAE;IAEd,MAAME,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8BJ,EAAE,EAAE,EAAE;MAC/DK,MAAM,EAAE;IACV,CAAC,CAAC;IAEF,IAAIF,QAAQ,CAACG,EAAE,EAAE;MACf;MACAd,YAAY,CAACQ,EAAE,CAAC;IAClB,CAAC,MAAM;MACLO,OAAO,CAACC,KAAK,CAAC,wBAAwB,CAAC;IACzC;EACF,CAAC;EAED,oBACEpB,OAAA;IAAAM,QAAA,gBACEN,OAAA;MAAAM,QAAA,EAAI;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACdV,OAAA;MAAAM,QAAA,EACGJ,KAAK,CAACmB,GAAG,CAAEC,IAAI,iBACdtB,OAAA;QAAAM,QAAA,gBACEN,OAAA;UAAAM,QAAA,EAAOgB,IAAI,CAACC;QAAM;UAAAhB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAC1BV,OAAA;UAAQwB,OAAO,EAAEA,CAAA,KAAMrB,YAAY,CAACmB,IAAI,CAAE;UAAAhB,QAAA,EAAC;QAAQ;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAAAV,OAAA;UAAQwB,OAAO,EAAEA,CAAA,KAAMb,YAAY,CAACW,IAAI,CAACV,EAAE,CAAE;UAAAN,QAAA,EAAC;QAAQ;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA,GAFpHY,IAAI,CAACV,EAAE;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAIZ,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAACe,EAAA,GAlCIxB,QAAQ;AAoCd,eAAeA,QAAQ;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}