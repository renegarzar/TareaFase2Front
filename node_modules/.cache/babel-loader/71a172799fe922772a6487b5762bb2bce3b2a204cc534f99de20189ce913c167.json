{"ast":null,"code":"var _jsxFileName = \"D:\\\\Documentos\\\\TecMilenio\\\\Fullstack\\\\fase1y2\\\\frontend\\\\my-app\\\\src\\\\componentes\\\\Hilo.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Comentario from \"./Comentario\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Hilo = ({\n  hilo,\n  volver\n}) => {\n  _s();\n  const [comentarios, setComentarios] = useState([]);\n  const [nuevoComentario, setNuevoComentario] = useState(\"\");\n\n  // Cargar los comentarios al montar el componente\n  useEffect(() => {\n    const fetchComentarios = async () => {\n      const response = await fetch('http://localhost:5000/comentarios');\n      const data = await response.json();\n      setComentarios(data);\n    };\n    fetchComentarios();\n  }, []);\n  const addComment = async () => {\n    const comentario = {\n      contenido: nuevoComentario,\n      autor: \"René\",\n      fecha: new Date().toISOString().slice(0, 19).replace('T', ' ')\n    };\n    const response = await fetch('http://localhost:5000/comentario', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(comentario)\n    });\n    if (response.ok) {\n      setComentarios([...comentarios, comentario]);\n      setNuevoComentario(\"\");\n    }\n  };\n\n  // Función para eliminar un comentario con confirmación\n  const deleteComment = async id => {\n    const confirmed = window.confirm(\"¿Estás seguro de que deseas eliminar este comentario?\");\n    if (confirmed) {\n      const response = await fetch(`http://localhost:5000/comentario/${id}`, {\n        method: 'DELETE'\n      });\n      if (response.ok) {\n        // Filtrar el comentario eliminado\n        setComentarios(comentarios.filter(comentario => comentario.id !== id));\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: hilo.titulo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: hilo.contenido\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), \"  \", /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Comentarios:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: comentarios.map(comentario => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: comentario.contenido\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Autor:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 16\n          }, this), \" \", comentario.autor]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: /*#__PURE__*/_jsxDEV(\"em\", {\n            children: comentario.fecha\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 16\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this)]\n      }, comentario.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: volver,\n      children: \"Volver\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_s(Hilo, \"aawT1AD/rzSTakHJRRq0rxw/WIw=\");\n_c = Hilo;\nexport default Hilo;\nvar _c;\n$RefreshReg$(_c, \"Hilo\");","map":{"version":3,"names":["React","useState","useEffect","Comentario","jsxDEV","_jsxDEV","Hilo","hilo","volver","_s","comentarios","setComentarios","nuevoComentario","setNuevoComentario","fetchComentarios","response","fetch","data","json","addComment","comentario","contenido","autor","fecha","Date","toISOString","slice","replace","method","headers","body","JSON","stringify","ok","deleteComment","id","confirmed","window","confirm","filter","children","titulo","fileName","_jsxFileName","lineNumber","columnNumber","map","onClick","_c","$RefreshReg$"],"sources":["D:/Documentos/TecMilenio/Fullstack/fase1y2/frontend/my-app/src/componentes/Hilo.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Comentario from \"./Comentario\";\r\n\r\nconst Hilo = ({ hilo, volver }) => {\r\n  const [comentarios, setComentarios] = useState([]);\r\n  const [nuevoComentario, setNuevoComentario] = useState(\"\");\r\n\r\n  // Cargar los comentarios al montar el componente\r\n  useEffect(() => {\r\n    const fetchComentarios = async () => {\r\n      const response = await fetch('http://localhost:5000/comentarios');\r\n      const data = await response.json();\r\n      setComentarios(data);\r\n    };\r\n\r\n    fetchComentarios();\r\n  }, []);\r\n\r\n  const addComment = async () => {\r\n    const comentario = {\r\n      contenido: nuevoComentario,\r\n      autor: \"René\",\r\n      fecha: new Date().toISOString().slice(0, 19).replace('T', ' ')\r\n    };\r\n\r\n    const response = await fetch('http://localhost:5000/comentario', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(comentario)\r\n    });\r\n\r\n    if (response.ok) {\r\n      setComentarios([...comentarios, comentario]);\r\n      setNuevoComentario(\"\");\r\n    }\r\n  };\r\n\r\n  // Función para eliminar un comentario con confirmación\r\n  const deleteComment = async (id) => {\r\n    const confirmed = window.confirm(\"¿Estás seguro de que deseas eliminar este comentario?\");\r\n    \r\n    if (confirmed) {\r\n      const response = await fetch(`http://localhost:5000/comentario/${id}`, {\r\n        method: 'DELETE',\r\n      });\r\n\r\n      if (response.ok) {\r\n        // Filtrar el comentario eliminado\r\n        setComentarios(comentarios.filter((comentario) => comentario.id !== id));\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>{hilo.titulo}</h2>\r\n      <p>{hilo.contenido}</p>  {/* Mostrar el contenido del hilo */}\r\n      <h3>Comentarios:</h3>\r\n      <ul>\r\n        {comentarios.map((comentario) => (\r\n          <li key={comentario.id}>\r\n            <p>{comentario.contenido}</p>\r\n            <p><strong>Autor:</strong> {comentario.autor}</p>\r\n            <p><em>{comentario.fecha}</em></p>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n      <button onClick={volver}>Volver</button>\r\n    </div>\r\n  );\r\n};\r\nexport default Hilo;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}